module Hacl.Test.Gf128PreComp
open FStar.HyperStack.All

#set-options "--lax"

open LowStar.Buffer
open Lib.IntTypes

val main: unit -> ST C.exit_code
  (requires (fun h -> True))
  (ensures  (fun h0 r h1 -> True))
let main () =
  push_frame();

  
  let key0 = alloca_of_list
  [
    0xacuy;0xbeuy;0xf2uy;0x05uy;0x79uy;0xb4uy;0xb8uy;0xebuy;
    0xceuy;0x88uy;0x9buy;0xacuy;0x87uy;0x32uy;0xdauy;0xd7uy
] in
  let input0 = alloca_of_list [
    0xfeuy;0xeduy;0xfauy;0xceuy;0xdeuy;0xaduy;0xbeuy;0xefuy;
    0xfeuy;0xeduy;0xfauy;0xceuy;0xdeuy;0xaduy;0xbeuy;0xefuy;
    0xabuy;0xaduy;0xdauy;0xd2uy;0x00uy;0x00uy;0x00uy;0x00uy;
    0x00uy;0x00uy;0x00uy;0x00uy;0x00uy;0x00uy;0x00uy;0x00uy;
    0x5auy;0x8duy;0xefuy;0x2fuy;0x0cuy;0x9euy;0x53uy;0xf1uy;
    0xf7uy;0x5duy;0x78uy;0x53uy;0x65uy;0x9euy;0x2auy;0x20uy;
    0xeeuy;0xb2uy;0xb2uy;0x2auy;0xafuy;0xdeuy;0x64uy;0x19uy;
    0xa0uy;0x58uy;0xabuy;0x4fuy;0x6fuy;0x74uy;0x6buy;0xf4uy;
    0x0fuy;0xc0uy;0xc3uy;0xb7uy;0x80uy;0xf2uy;0x44uy;0x45uy;
    0x2duy;0xa3uy;0xebuy;0xf1uy;0xc5uy;0xd8uy;0x2cuy;0xdeuy;
    0xa2uy;0x41uy;0x89uy;0x97uy;0x20uy;0x0euy;0xf8uy;0x2euy;
    0x44uy;0xaeuy;0x7euy;0x3fuy
    ] in
  let tag0 = alloca_of_list [
    0xccuy;0x9auy;0xe9uy;0x17uy;0x57uy;0x29uy;0xa6uy;0x49uy;
    0x93uy;0x6euy;0x89uy;0x0buy;0xd9uy;0x71uy;0xa8uy;0xbfuy
  ] in
  let comp0 = alloca 0uy 16ul in
  Hacl.Impl.Gf128.PreComp.ghash comp0 input0 (size 92) key0;
  TestLib.compare_and_print (C.String.of_literal "GF128 Tag 0") tag0 comp0 16ul;

  pop_frame();
  C.EXIT_SUCCESS
